{
  "version": 3,
  "sources": ["../../svelte-forms/validators/between.js", "../../svelte-forms/validators/email.js", "../../svelte-forms/validators/max.js", "../../svelte-forms/validators/min.js", "../../svelte-forms/validators/required.js", "../../svelte-forms/validators/url.js", "../../svelte-forms/validators/matchField.js", "../../svelte-forms/validators/not.js", "../../svelte-forms/validators/pattern.js"],
  "sourcesContent": ["export function between(min, max) {\r\n    return (value) => {\r\n        const val = isNaN(value) ? value.length : parseFloat(value);\r\n        return { valid: val >= min && val <= max, name: 'between' };\r\n    };\r\n}\r\n", "export function email() {\r\n    return (value) => {\r\n        const regex = /^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$/;\r\n        return { valid: Boolean(value) && regex.test(value), name: 'not_an_email' };\r\n    };\r\n}\r\n", "export function max(n) {\r\n    return (value) => {\r\n        const val = typeof value === 'string' ? value.length : isNaN(value) ? 0 : parseFloat(value);\r\n        return { valid: val <= n, name: 'max' };\r\n    };\r\n}\r\n", "export function min(n) {\r\n    return (value) => {\r\n        const val = isNaN(value) ? value.length : parseFloat(value);\r\n        return { valid: val >= n, name: 'min' };\r\n    };\r\n}\r\n", "export function required() {\r\n    return (val) => {\r\n        let valid = true;\r\n        if (val === undefined || val === null)\r\n            valid = false;\r\n        if (typeof val === 'string') {\r\n            const tmp = val.replace(/\\s/g, '');\r\n            valid = tmp.length > 0;\r\n        }\r\n        return { valid, name: 'required' };\r\n    };\r\n}\r\n", "export function url() {\r\n    const regex = /(https?|ftp|git|svn):\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-z]{2,63}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/i;\r\n    return (value) => ({ valid: regex.test(value), name: 'url' });\r\n}\r\n", "import { get } from 'svelte/store';\r\nexport function matchField(store) {\r\n    return (value) => {\r\n        return { valid: get(store).value === value, name: 'match_field' };\r\n    };\r\n}\r\n", "import isPromise from 'is-promise';\r\nexport function not(validation) {\r\n    return async (value) => {\r\n        const validator = validation(value);\r\n        if (isPromise(validator)) {\r\n            const result = await validator;\r\n            return { valid: !result.valid, name: result.name };\r\n        }\r\n        return { valid: !validator.valid, name: validator.name };\r\n    };\r\n}\r\n", "export function pattern(pattern) {\r\n    return (value) => {\r\n        if (value === null || value === undefined) {\r\n            return { valid: false, name: 'pattern' };\r\n        }\r\n        return { valid: pattern.test(value), name: 'pattern' };\r\n    };\r\n}\r\n"],
  "mappings": ";;;;;;;;;AAAO,SAAS,QAAQA,MAAKC,MAAK;AAC9B,SAAO,CAAC,UAAU;AACd,UAAM,MAAM,MAAM,KAAK,IAAI,MAAM,SAAS,WAAW,KAAK;AAC1D,WAAO,EAAE,OAAO,OAAOD,QAAO,OAAOC,MAAK,MAAM,UAAU;AAAA,EAC9D;AACJ;;;ACLO,SAAS,QAAQ;AACpB,SAAO,CAAC,UAAU;AACd,UAAM,QAAQ;AACd,WAAO,EAAE,OAAO,QAAQ,KAAK,KAAK,MAAM,KAAK,KAAK,GAAG,MAAM,eAAe;AAAA,EAC9E;AACJ;;;ACLO,SAAS,IAAI,GAAG;AACnB,SAAO,CAAC,UAAU;AACd,UAAM,MAAM,OAAO,UAAU,WAAW,MAAM,SAAS,MAAM,KAAK,IAAI,IAAI,WAAW,KAAK;AAC1F,WAAO,EAAE,OAAO,OAAO,GAAG,MAAM,MAAM;AAAA,EAC1C;AACJ;;;ACLO,SAAS,IAAI,GAAG;AACnB,SAAO,CAAC,UAAU;AACd,UAAM,MAAM,MAAM,KAAK,IAAI,MAAM,SAAS,WAAW,KAAK;AAC1D,WAAO,EAAE,OAAO,OAAO,GAAG,MAAM,MAAM;AAAA,EAC1C;AACJ;;;ACLO,SAAS,WAAW;AACvB,SAAO,CAAC,QAAQ;AACZ,QAAI,QAAQ;AACZ,QAAI,QAAQ,UAAa,QAAQ;AAC7B,cAAQ;AACZ,QAAI,OAAO,QAAQ,UAAU;AACzB,YAAM,MAAM,IAAI,QAAQ,OAAO,EAAE;AACjC,cAAQ,IAAI,SAAS;AAAA,IACzB;AACA,WAAO,EAAE,OAAO,MAAM,WAAW;AAAA,EACrC;AACJ;;;ACXO,SAAS,MAAM;AAClB,QAAM,QAAQ;AACd,SAAO,CAAC,WAAW,EAAE,OAAO,MAAM,KAAK,KAAK,GAAG,MAAM,MAAM;AAC/D;;;ACFO,SAAS,WAAW,OAAO;AAC9B,SAAO,CAAC,UAAU;AACd,WAAO,EAAE,OAAO,gBAAI,KAAK,EAAE,UAAU,OAAO,MAAM,cAAc;AAAA,EACpE;AACJ;;;ACJO,SAAS,IAAI,YAAY;AAC5B,SAAO,OAAO,UAAU;AACpB,UAAM,YAAY,WAAW,KAAK;AAClC,QAAI,UAAU,SAAS,GAAG;AACtB,YAAM,SAAS,MAAM;AACrB,aAAO,EAAE,OAAO,CAAC,OAAO,OAAO,MAAM,OAAO,KAAK;AAAA,IACrD;AACA,WAAO,EAAE,OAAO,CAAC,UAAU,OAAO,MAAM,UAAU,KAAK;AAAA,EAC3D;AACJ;;;ACVO,SAAS,QAAQC,UAAS;AAC7B,SAAO,CAAC,UAAU;AACd,QAAI,UAAU,QAAQ,UAAU,QAAW;AACvC,aAAO,EAAE,OAAO,OAAO,MAAM,UAAU;AAAA,IAC3C;AACA,WAAO,EAAE,OAAOA,SAAQ,KAAK,KAAK,GAAG,MAAM,UAAU;AAAA,EACzD;AACJ;",
  "names": ["min", "max", "pattern"]
}
